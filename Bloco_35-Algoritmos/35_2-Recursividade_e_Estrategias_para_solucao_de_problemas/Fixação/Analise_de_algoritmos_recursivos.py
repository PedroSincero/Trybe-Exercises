# Para que consigamos realizar a an√°lise de algoritmos recursivos, n√≥s iremos fazer uso da √Årvore de Recorr√™ncia ! Mas o que √© isso?!

# √Årvore de Recurs√£o

# O m√©todo da √°rvore de recurs√£o pode ser utilizado para estimar o custo de um algoritmo. √â um meio de analisarmos seu custo, o que nos ajuda a decidir se tal solu√ß√£o recursiva vale a pena ou n√£o. Podemos visualizar n√≠vel a n√≠vel da estrutura de um algoritmo recursivo por meio de uma √°rvore recursiva. No final, tem-se a estimativa de tempo do problema. Vamos ver na pr√°tica como isso acontece para termos um melhor entendimento.

def fibonacci(num):  # nome da fun√ß√£o e par√¢metro
    if (num <= 1):  # condi√ß√£o de parada
        return num
    else:
        return fibonacci(num - 2) + fibonacci(num - 1)  # chamada de si mesma com um novo valor

# Acima estamos fazendo um c√≥digo recursivo para c√°lculo de fibonacci. Na imagem abaixo visualizamos a representa√ß√£o do algoritmo fibonacci recursivo, que acabamos de montar, convertido em uma estrutura que chamamos de √°rvore:

# üí° Lembre-se! Se voc√™ se embananar com as estrat√©gias de an√°lise de recurs√£o, fique tranquilo(a), √© um assunto mais desafiador e com o tempo e experi√™ncia esse conhecimento vem. E n√£o deixe de falar com a gente no Slack se algum exemplo estiver te confundindo!
# Ou seja: desenhe todas as recurs√µes do problema at√© chegar aos casos base e some as complexidades! Fique de olho nas propor√ß√µes! Se cada subproblema √© O(n) e voc√™ criou um para cada elemento da sua entrada de tamanho n , voc√™ tem a√≠ uma complexidade O(n * n) , ou seja, uma complexidade quadr√°tica. Se, por outro lado, a cada subproblema voc√™ dividiu o tamanho do problema original por dois, voc√™ gerar√° log n subproblemas. Se cada um desses custa O(n) , voc√™ teria uma complexidade O(n* log n)
# A forma de traduzir a l√≥gica da √°rvore de recurs√£o para uma nota√ß√£o puramente matem√°tica se chama Teorema Mestre ! N√£o √© o nosso escopo por agora, ok? Mas fique √† vontade para pesquisar a respeito e nos trazer todas as perguntas, se quiser!

