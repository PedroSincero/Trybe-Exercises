// Em uma única operação no estágio $project , podemos montar uma expressão um pouco mais complexa, utilizando $add para calcular o total e o $subtract para aplicar um desconto no subtotal:

db.sales.aggregate([
  {
$project: {
      item: 1,
      total: {
$subtract: [
          { $add: ["$price", "$fee"] },
          "$discount"
        ]
      }
    }
  }
]);

// Alternativamente, você pode utilizar a função Date() para obter a data corrente:

db.sales.aggregate([
  {
$project: {
      item: 1,
      dateDifference: {
$subtract: [new Date(), "$date"]
      }
    }
  }
]);

// A operação seguinte subtrai 5 minutos do campo date :
db.sales.aggregate([
  {
$project: {
      item: 1,
      dateDifference: {
$subtract: ["$date", 5 * 60 * 1000]
      }
    }
  }
]);



// 1 - Calcule qual o lucro total de cada produto, considerando o preço de compra, os impostos e seu valor de venda.
use ('test');
db.products.aggregate([
  {
    $project: {
      _id: false,
      name: true,
      lucro_total: {
        $subtract: [
          "$sale_price",
          {
            $add: [ "$purchase_price", "$taxes"]
          },
        ]
      }
    }
  }
]);
