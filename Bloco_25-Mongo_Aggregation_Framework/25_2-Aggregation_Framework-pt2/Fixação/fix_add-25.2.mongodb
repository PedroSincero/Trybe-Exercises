// use ('test');
// db.products.insertMany([
//   { "name": "Ball", "purchase_price": 7.6, "taxes": 1.9, "sale_price": 12.5, "quantity": 5 },
//   { "name": "Baseball bat", "purchase_price": 18.5, "taxes": 5.3, "sale_price": 39.9, "quantity": 12 },
//   { "name": "Sneakers", "purchase_price": 10.4, "taxes": 1.50, "sale_price": 14.9, "quantity": 3 },
//   { "name": "Gloves", "purchase_price": 2.85, "taxes": 0.90, "sale_price": 5.70, "quantity": 34 },
//   { "name": "Jacket", "purchase_price": 28.9, "taxes": 10.80, "sale_price": 59.9, "quantity": 20 },
//   { "name": "Mousepad", "purchase_price": 16.6, "taxes": 3.40, "sale_price": 29.9, "quantity": 8 },
//   { "name": "Monitor", "purchase_price": 119.9, "taxes": 39.20, "sale_price": 240.6, "quantity": 11 },
// ]);



// Para valores do tipo date , um dos argumentos sempre será tratado como milissegundos. Imagine que você queira adicionar 3 dias ao valor do campo date . Você consegue fazer de duas maneiras. A primeira é passar em um dos argumentos o número equivalente a 3 dias em milissegundos ( 2,592e+8 ).

// db.sales.aggregate([
//   { $project: { item: 1, billing_date: { $add: ["$date", 2.592e+8] } } }
// ]);

// db.sales.aggregate([
//   { $project: { item: 1, billing_date: { $add: ["$date", 3 * 24 * 60 * 60000] } } }
// ]);
// Utilizando o banco de dados storage , faça o seguinte exercício:
// 1 - Calcule qual o custo total de cada produto, considerando o preço de compra e os impostos.
use ('test');
db.products.aggregate([
  {
    $project: {
      _id: false,
      name: true,
      custo_total: {
        $add: ["$purchase_price", "$taxes"]
      }
    }
  }
]);
