// O primeiro passo que precisamos dar Ã© pensar na estrutura da nossa funÃ§Ã£o:
// Quantos e quais parÃ¢metros ela irÃ¡ esperar?
// Qual tipo de resposta ela irÃ¡ retornar?
// No nosso caso nossa funÃ§Ã£o deverÃ¡ receber um parÃ¢metro "media" e responder com "reprovado" ou "aprovado".
// Tendo em mente esses questionamentos poderÃ­amos simplesmente jÃ¡ partir para a implementaÃ§Ã£o e chegar ao seguinte cÃ³digo:
function calculaSituacao(media) {
  if (media > 7) {
    return 'aprovado';
  }

  return 'reprovado';
}

module.exports = calculaSituacao;
// Simples nÃ©? Agora vamos testar essa funÃ§Ã£o de acordo com os comportamentos que ela deveria ter segundo a proposta, nesse caso precisamos garantir que:
// Se passado um valor menor que 7 , por exemplo 4 , a resposta deve ser "reprovado" ;
// Se passado um valor maior que 7 , por exemplo 9 , a resposta ser "aprovado" ;
// E, nÃ£o podemos esquecer do "OU", sendo assim, se passado 7 , a resposta deve ser "aprovado" ;
// Para validar esses cenÃ¡rios que pensamos podemos escrever algumas chamadas a nossa funÃ§Ã£o:
const calculaSituacao = require('./examples/calculaSituacao');

console.log('Quando a mÃ©dia for menor que 7, retorna "reprovado":');

const respostaCenario1 = calculaSituacao(4);
if (respostaCenario1 === 'reprovado') {
  console.log(`Ok ðŸš€`);
} else {
  console.error('Resposta nÃ£o esperada ðŸš¨');
}
// console:
// Quando a mÃ©dia for menor que 7, retorna "reprovado":
// Ok ðŸš€

console.log('Quando a mÃ©dia for maior que 7, retorna "aprovado":');

const respostaCenario2 = calculaSituacao(9);
if (respostaCenario2 === 'aprovado') {
  console.log(`Ok ðŸš€`);
} else {
  console.error('Resposta nÃ£o esperada ðŸš¨');
}
// console:
// Quando a mÃ©dia for maior que 7, retorna "aprovado":
// Ok ðŸš€

console.log('Quando a mÃ©dia for igual a 7, retorna "aprovado":');

const respostaCenario3 = calculaSituacao(7);
if (respostaCenario3 === 'aprovado') {
  console.log(`Ok ðŸš€`);
} else {
  console.error('Resposta nÃ£o esperada ðŸš¨');
}
// console:
// Quando a mÃ©dia for igual a 7, retorna "aprovado":
// Resposta nÃ£o esperada ðŸš¨